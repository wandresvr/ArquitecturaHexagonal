plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'jacoco'
	id 'maven-publish'
}

group = 'com.itm.edu'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	maven { url = uri("https://jitpack.io") }
	mavenCentral()
	mavenLocal() 
}

dependencies {
	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	
	// RabbitMQ
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.amqp:spring-rabbit:3.1.1'
	
	// Database
	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
	implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	implementation 'org.postgresql:postgresql'
	implementation 'org.hibernate.orm:hibernate-core:6.4.4.Final'
	
	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	
	// Jackson para JSON
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	
	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.h2database:h2'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'

	// Dto para sincronizar microservicios
	implementation('com.github.wandresvr:ArquitecturaHexagonal:main-SNAPSHOT') {
		changing = true
	}

	// Swagger/OpenAPI
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
	systemProperty 'spring.profiles.active', 'test'
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = false
		csv.required = false
		html.outputLocation = file("${project.rootDir}/coverage/html")
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
}